name: publish

on:
  pull_request:
    branches:
      - main
    # types: [closed]

jobs:
  release:
    name: Publish
    #if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    if: startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
    - name: Get tag
      id: get_tag
      env:
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
      run: echo ::set-output name=tag::${HEAD_REF#release\/}
    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        release_name: ${{ steps.get_tag.outputs.tag }}
        body: |
          Platform  | Package | SHA256 Checksum
          --        | --      | --
          Windows   | [tippy-win-x64.zip](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/tippy-win-x64.zip) | <code>TODO</code>
          macOS     | [tippy-osx-x64.zip](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/tippy-osx-x64.zip) | <code>TODO</code>
          Linux     | [tippy-linux-x64.tar.gz](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/tippy-linux-x64.tar.gz) | <code>TODO</code>
        draft: true
        prerelease: true
    - name: Output upload URL file
      run: echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt
    - name: Save upload URL file
      uses: actions/upload-artifact@v1
      with:
        name: upload_url
        path: upload_url.txt

  publish:
    name: Publish ${{ matrix.runtime }}
    needs: [release]
    # if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    if: startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            short_name: linux
            runtime: linux-x64
            artifact_name: tippy-linux-x64
            artifact_full_name: tippy-linux-x64.tar.gz
          - os: windows-latest
            short_name: win
            runtime: win-x64
            artifact_name: tippy-win-x64
            artifact_full_name: tippy-win-x64.zip
          - os: macos-latest
            short_name: mac
            runtime: osx-x64
            artifact_name: tippy-osx-x64
            artifact_full_name: tippy-osx-x64.zip

    steps:
    - name: Load upload URL file
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - name: Get upload URL
      id: get_upload_url
      run: |
        value=`cat upload_url/upload_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Fetch ckb binaries
      run: ./tools/download-binaries.sh ${{ matrix.short_name }}
    - name: Build
      run: dotnet build -c Release
    - name: Publish
      run: |
        dotnet publish src/Tippy/Tippy.csproj -c Release -r ${{ matrix.runtime }} /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ./bin/publish/${{ matrix.artifact_name }}
        chmod +x ./bin/publish/${{ matrix.artifact_full_name }}/BinDeps/${{ matrix.short_name }}/ckb*
    - name: Archive files zip
      if: matrix.short_name != 'linux'
      uses: papeloto/action-zip@v1
      with:
        files: ./bin/publish/${{ matrix.artifact_name }}
        dest: release/${{ matrix.artifact_full_name }}
    - name: Archive files tar
      if: matrix.short_name == 'linux'
      run: tar -cvf release/${{ matrix.artifact_full_name }} ./bin/publish/${{ matrix.artifact_name }}
    - name: Generate checksum
      run: sha256sum release/${{ matrix.artifact_full_name }} > release/${{ matrix.artifact_full_name }}.sha256.txt
    - name: Upload binary
      id: upload-release-binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: release/${{ matrix.artifact_full_name }}
        asset_name: ${{ matrix.artifact_full_name }}
        asset_content_type: application/zip
    - name: Upload checksum
      id: upload-release-checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: release/${{ matrix.artifact_full_name }}.sha256.txt
        asset_name: ${{ matrix.artifact_full_name }}.sha256.txt
        asset_content_type: text/plain
